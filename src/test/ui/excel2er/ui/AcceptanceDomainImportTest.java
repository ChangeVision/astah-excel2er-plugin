package excel2er.ui;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.notNullValue;
import static org.junit.Assert.assertThat;

import java.net.URL;

import javax.swing.JFrame;

import org.apache.commons.lang3.SystemUtils;
import org.fest.swing.fixture.DialogFixture;
import org.fest.swing.fixture.FrameFixture;
import org.fest.swing.junit.v4_5.runner.GUITestRunner;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;

import com.change_vision.jude.api.inf.AstahAPI;
import com.change_vision.jude.api.inf.model.IERDomain;
import com.change_vision.jude.api.inf.model.INamedElement;

import excel2er.AstahModelManager;
import excel2er.Messages;

@RunWith(GUITestRunner.class)
public class AcceptanceDomainImportTest {

	private FrameFixture frameFixture;
	private DialogFixture dialogFixture;
	private ImportERDomainDialog target;

	@Before
	public void setUp() throws Exception {

		JFrame frame = new JFrame();
		frameFixture = new FrameFixture(frame);
		target = new ImportERDomainDialog(frame);
		dialogFixture = new DialogFixture(frameFixture.robot, target);
		dialogFixture.moveToFront();
		dialogFixture.show();
		dialogFixture.focus();
	}

	@After
	public void tearDown() throws Exception {
		if (dialogFixture != null) {
			dialogFixture.cleanUp();
		}
		if (frameFixture != null) {
			frameFixture.cleanUp();
		}
	}

	/**
	 * <pre>
	 * - following attribute property set... 
	 *   - logical 
	 *   - datatype
	 * </pre>
	 * 
	 * @throws Exception
	 */
	@Test
	public void accept_import_when_set_logical_datatype_attribute_properties()
			throws Exception {
		AstahModelManager.open(getWorkspaceFilePath("empty.asta"));

		dialogFixture.textBox(InputFilePanel.InputFileText.NAME).setText(
				getWorkspaceFilePath("domainLists.xls").getFile());

		dialogFixture.textBox(DomainPanel.StartRow.NAME).setText("4");
		dialogFixture.textBox(DomainPanel.ItemCol.LOGICAL).setText("B");
		dialogFixture.textBox(DomainPanel.ItemCol.DATATYPE).setText("V");
		
		dialogFixture.textBox(DomainPanel.ItemCol.PHYSICAL).setText("");
		dialogFixture.textBox(DomainPanel.ItemCol.DEFINITION).setText("");
		
		dialogFixture.button(ImportERDomainDialog.ImportButton.NAME).click();

		dialogFixture.optionPane().requireVisible();
		dialogFixture.optionPane().requireInformationMessage();

		assertThat(countERDomain(), is(4));

		assertThat(findERDomain("Name"), is(notNullValue()));
		assertThat(findERDomain("Address"), is(notNullValue()));
		assertThat(findERDomain("Age"), is(notNullValue()));
		assertThat(findERDomain("Birthday"), is(notNullValue()));

		IERDomain domain = findERDomain("Address");
		assertThat(domain, is(notNullValue()));

		assertThat(domain.getLogicalName(),is("Address"));
		assertThat(domain.getPhysicalName(),is(""));
		assertThat(domain.getDatatypeName(),is("VARCHAR"));
		assertThat(domain.getLengthPrecision(),is("10"));
		assertThat(domain.getDefinition(),is(""));
		assertThat(domain.isNotNull(),is(false));
	}
	
	/**
	 * <pre>
	 * - import from domain list that is generated by astah.
	 * - following attribute property set... 
	 *   - all 
	 * </pre>
	 * 
	 * @throws Exception
	 */
	@Test
	public void accept_import_when_set_default_properties()
			throws Exception {
		AstahModelManager.open(getWorkspaceFilePath("empty.asta"));

		dialogFixture.textBox(InputFilePanel.InputFileText.NAME).setText(
				getWorkspaceFilePath("domainLists.xls").getFile());

		dialogFixture.button(ImportERDomainDialog.ImportButton.NAME).click();

		dialogFixture.optionPane().requireVisible();
		dialogFixture.optionPane().requireInformationMessage();

		assertThat(countERDomain(), is(4));

		assertThat(findERDomain("Name"), is(notNullValue()));
		assertThat(findERDomain("Address"), is(notNullValue()));
		assertThat(findERDomain("Age"), is(notNullValue()));
		assertThat(findERDomain("Birthday"), is(notNullValue()));

		IERDomain domain = findERDomain("Address");
		assertThat(domain, is(notNullValue()));

		assertThat(domain.getLogicalName(),is("Address"));
		assertThat(domain.getPhysicalName(),is("ADDRESS"));
		assertThat(domain.getDatatypeName(),is("VARCHAR"));
		assertThat(domain.getLengthPrecision(),is("10"));
		assertThat(domain.getDefinition(),is("address def"));
		assertThat(domain.isNotNull(),is(false));
	}
	
	@Test
	public void validate_necessary_property() throws Exception {
		dialogFixture.textBox(DomainPanel.StartRow.NAME).setText("");
		dialogFixture.textBox(DomainPanel.ItemCol.LOGICAL).setText("");
		dialogFixture.textBox(DomainPanel.ItemCol.DATATYPE).setText("");
		
		dialogFixture.button(ImportERDomainDialog.ImportButton.NAME).click();
		
		dialogFixture.optionPane().requireErrorMessage();
		
		StringBuilder message = new StringBuilder();
		message.append(Messages.getMessage("error.inputfile_required")).append(SystemUtils.LINE_SEPARATOR);
		message.append(getMessage("error.required","explain_domain","item_datatype_domain")).append(SystemUtils.LINE_SEPARATOR);
		message.append(getMessage("error.required","explain_domain","start_row")).append(SystemUtils.LINE_SEPARATOR);
		message.append(getMessage("error.required","explain_domain","item_logical_domain"));
		assertThat(dialogFixture.optionPane().textBox(ImportEREntityDialog.DETAIL_TEXT).text(),is(message.toString()));
	}
	
	private String getMessage(String key, String parameter, String subparameter) {
		return Messages.getMessage(key, Messages.getMessage(parameter)
				+ " - " + Messages.getMessage(subparameter));
	}

	private URL getWorkspaceFilePath(String filename) {
		return this.getClass().getResource(filename);
	}

	private int countERDomain() throws Exception {
		INamedElement[] elements = AstahAPI.getAstahAPI().getProjectAccessor()
				.findElements(IERDomain.class);
		return elements.length;
	}

	private IERDomain findERDomain(String name) throws Exception {
		INamedElement[] elements = AstahAPI.getAstahAPI().getProjectAccessor()
				.findElements(IERDomain.class, name);
		if (elements.length > 0)
			return (IERDomain) elements[0];

		return null;
	}
}
